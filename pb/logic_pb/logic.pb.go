// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: logic.proto

package logic_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LoginRequest 登录请求
type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`         // 用户名
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_logic_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// LoginResponse 登录响应
type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                           // 状态码
	AuthToken     string                 `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"` // 认证令牌
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_logic_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginResponse) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

// RegisterRequest 注册请求
type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`         // 用户名
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_logic_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// RegisterReply 注册响应
type RegisterReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                           // 状态码
	AuthToken     string                 `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"` // 认证令牌
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterReply) Reset() {
	*x = RegisterReply{}
	mi := &file_logic_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReply) ProtoMessage() {}

func (x *RegisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReply.ProtoReflect.Descriptor instead.
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RegisterReply) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

// LogoutRequest 登出请求
type LogoutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthToken     string                 `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"` // 认证令牌
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	mi := &file_logic_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{4}
}

func (x *LogoutRequest) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

// LogoutResponse 登出响应
type LogoutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 状态码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	mi := &file_logic_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResponse.ProtoReflect.Descriptor instead.
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{5}
}

func (x *LogoutResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// CheckAuthRequest 认证检查请求
type CheckAuthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthToken     string                 `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"` // 认证令牌
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckAuthRequest) Reset() {
	*x = CheckAuthRequest{}
	mi := &file_logic_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAuthRequest) ProtoMessage() {}

func (x *CheckAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAuthRequest.ProtoReflect.Descriptor instead.
func (*CheckAuthRequest) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{6}
}

func (x *CheckAuthRequest) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

// CheckAuthResponse 认证检查响应
type CheckAuthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                        // 状态码
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`      // 用户ID
	UserName      string                 `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"` // 用户名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckAuthResponse) Reset() {
	*x = CheckAuthResponse{}
	mi := &file_logic_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAuthResponse) ProtoMessage() {}

func (x *CheckAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAuthResponse.ProtoReflect.Descriptor instead.
func (*CheckAuthResponse) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{7}
}

func (x *CheckAuthResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckAuthResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckAuthResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

// GetUserInfoRequest 获取用户信息请求
type GetUserInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserInfoRequest) Reset() {
	*x = GetUserInfoRequest{}
	mi := &file_logic_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoRequest) ProtoMessage() {}

func (x *GetUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserInfoRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// GetUserInfoResponse 获取用户信息响应
type GetUserInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                        // 状态码
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`      // 用户ID
	UserName      string                 `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"` // 用户名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserInfoResponse) Reset() {
	*x = GetUserInfoResponse{}
	mi := &file_logic_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResponse) ProtoMessage() {}

func (x *GetUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetUserInfoResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserInfoResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

// ConnectRequest 连接请求
type ConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthToken     string                 `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"` // 认证令牌
	RoomId        int32                  `protobuf:"varint,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`         // 房间ID
	ServerId      string                 `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`    // 服务器ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_logic_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{10}
}

func (x *ConnectRequest) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *ConnectRequest) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *ConnectRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

// ConnectReply 连接响应
type ConnectReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectReply) Reset() {
	*x = ConnectReply{}
	mi := &file_logic_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReply) ProtoMessage() {}

func (x *ConnectReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReply.ProtoReflect.Descriptor instead.
func (*ConnectReply) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{11}
}

func (x *ConnectReply) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// DisConnectRequest 断开连接请求
type DisConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        int32                  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // 房间ID
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisConnectRequest) Reset() {
	*x = DisConnectRequest{}
	mi := &file_logic_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisConnectRequest) ProtoMessage() {}

func (x *DisConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisConnectRequest.ProtoReflect.Descriptor instead.
func (*DisConnectRequest) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{12}
}

func (x *DisConnectRequest) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *DisConnectRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// DisConnectReply 断开连接响应
type DisConnectReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Has           bool                   `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"` // 是否断开成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisConnectReply) Reset() {
	*x = DisConnectReply{}
	mi := &file_logic_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisConnectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisConnectReply) ProtoMessage() {}

func (x *DisConnectReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisConnectReply.ProtoReflect.Descriptor instead.
func (*DisConnectReply) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{13}
}

func (x *DisConnectReply) GetHas() bool {
	if x != nil {
		return x.Has
	}
	return false
}

// SendMsg 通用消息结构
type SendMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                                      // 状态码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                                         // 消息内容
	FromUserId    int32                  `protobuf:"varint,3,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`      // 发送方用户ID
	FromUserName  string                 `protobuf:"bytes,4,opt,name=from_user_name,json=fromUserName,proto3" json:"from_user_name,omitempty"` // 发送方用户名
	ToUserId      int32                  `protobuf:"varint,5,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`            // 接收方用户ID
	ToUserName    string                 `protobuf:"bytes,6,opt,name=to_user_name,json=toUserName,proto3" json:"to_user_name,omitempty"`       // 接收方用户名
	RoomId        int32                  `protobuf:"varint,7,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                    // 房间ID
	Op            int32                  `protobuf:"varint,8,opt,name=op,proto3" json:"op,omitempty"`                                          // 操作类型
	CreateTime    string                 `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`         // 创建时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMsg) Reset() {
	*x = SendMsg{}
	mi := &file_logic_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsg) ProtoMessage() {}

func (x *SendMsg) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsg.ProtoReflect.Descriptor instead.
func (*SendMsg) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{14}
}

func (x *SendMsg) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendMsg) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SendMsg) GetFromUserId() int32 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *SendMsg) GetFromUserName() string {
	if x != nil {
		return x.FromUserName
	}
	return ""
}

func (x *SendMsg) GetToUserId() int32 {
	if x != nil {
		return x.ToUserId
	}
	return 0
}

func (x *SendMsg) GetToUserName() string {
	if x != nil {
		return x.ToUserName
	}
	return ""
}

func (x *SendMsg) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *SendMsg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *SendMsg) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// SendTcpMsg TCP专用消息结构
type SendTcpMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                                      // 状态码
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                                         // 消息内容
	FromUserId    int32                  `protobuf:"varint,3,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`      // 发送方用户ID
	FromUserName  string                 `protobuf:"bytes,4,opt,name=from_user_name,json=fromUserName,proto3" json:"from_user_name,omitempty"` // 发送方用户名
	ToUserId      int32                  `protobuf:"varint,5,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`            // 接收方用户ID
	ToUserName    string                 `protobuf:"bytes,6,opt,name=to_user_name,json=toUserName,proto3" json:"to_user_name,omitempty"`       // 接收方用户名
	RoomId        int32                  `protobuf:"varint,7,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                    // 房间ID
	Op            int32                  `protobuf:"varint,8,opt,name=op,proto3" json:"op,omitempty"`                                          // 操作类型
	CreateTime    string                 `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`         // 创建时间
	AuthToken     string                 `protobuf:"bytes,10,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`           // 认证令牌 (TCP专用)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendTcpMsg) Reset() {
	*x = SendTcpMsg{}
	mi := &file_logic_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTcpMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTcpMsg) ProtoMessage() {}

func (x *SendTcpMsg) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTcpMsg.ProtoReflect.Descriptor instead.
func (*SendTcpMsg) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{15}
}

func (x *SendTcpMsg) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendTcpMsg) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SendTcpMsg) GetFromUserId() int32 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *SendTcpMsg) GetFromUserName() string {
	if x != nil {
		return x.FromUserName
	}
	return ""
}

func (x *SendTcpMsg) GetToUserId() int32 {
	if x != nil {
		return x.ToUserId
	}
	return 0
}

func (x *SendTcpMsg) GetToUserName() string {
	if x != nil {
		return x.ToUserName
	}
	return ""
}

func (x *SendTcpMsg) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *SendTcpMsg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *SendTcpMsg) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SendTcpMsg) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

var File_logic_proto protoreflect.FileDescriptor

const file_logic_proto_rawDesc = "" +
	"\n" +
	"\vlogic.proto\x12\blogic_pb\">\n" +
	"\fLoginRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"B\n" +
	"\rLoginResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x02 \x01(\tR\tauthToken\"A\n" +
	"\x0fRegisterRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"B\n" +
	"\rRegisterReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x02 \x01(\tR\tauthToken\".\n" +
	"\rLogoutRequest\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x01 \x01(\tR\tauthToken\"$\n" +
	"\x0eLogoutResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\"1\n" +
	"\x10CheckAuthRequest\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x01 \x01(\tR\tauthToken\"]\n" +
	"\x11CheckAuthResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x03 \x01(\tR\buserName\"-\n" +
	"\x12GetUserInfoRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\"_\n" +
	"\x13GetUserInfoResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x03 \x01(\tR\buserName\"e\n" +
	"\x0eConnectRequest\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x01 \x01(\tR\tauthToken\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\x05R\x06roomId\x12\x1b\n" +
	"\tserver_id\x18\x03 \x01(\tR\bserverId\"'\n" +
	"\fConnectReply\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\"E\n" +
	"\x11DisConnectRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\x05R\x06roomId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\"#\n" +
	"\x0fDisConnectReply\x12\x10\n" +
	"\x03has\x18\x01 \x01(\bR\x03has\"\x81\x02\n" +
	"\aSendMsg\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12 \n" +
	"\ffrom_user_id\x18\x03 \x01(\x05R\n" +
	"fromUserId\x12$\n" +
	"\x0efrom_user_name\x18\x04 \x01(\tR\ffromUserName\x12\x1c\n" +
	"\n" +
	"to_user_id\x18\x05 \x01(\x05R\btoUserId\x12 \n" +
	"\fto_user_name\x18\x06 \x01(\tR\n" +
	"toUserName\x12\x17\n" +
	"\aroom_id\x18\a \x01(\x05R\x06roomId\x12\x0e\n" +
	"\x02op\x18\b \x01(\x05R\x02op\x12\x1f\n" +
	"\vcreate_time\x18\t \x01(\tR\n" +
	"createTime\"\xa3\x02\n" +
	"\n" +
	"SendTcpMsg\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12 \n" +
	"\ffrom_user_id\x18\x03 \x01(\x05R\n" +
	"fromUserId\x12$\n" +
	"\x0efrom_user_name\x18\x04 \x01(\tR\ffromUserName\x12\x1c\n" +
	"\n" +
	"to_user_id\x18\x05 \x01(\x05R\btoUserId\x12 \n" +
	"\fto_user_name\x18\x06 \x01(\tR\n" +
	"toUserName\x12\x17\n" +
	"\aroom_id\x18\a \x01(\x05R\x06roomId\x12\x0e\n" +
	"\x02op\x18\b \x01(\x05R\x02op\x12\x1f\n" +
	"\vcreate_time\x18\t \x01(\tR\n" +
	"createTime\x12\x1d\n" +
	"\n" +
	"auth_token\x18\n" +
	" \x01(\tR\tauthTokenB\x16Z\x14yoyichat/pb/logic_pbb\x06proto3"

var (
	file_logic_proto_rawDescOnce sync.Once
	file_logic_proto_rawDescData []byte
)

func file_logic_proto_rawDescGZIP() []byte {
	file_logic_proto_rawDescOnce.Do(func() {
		file_logic_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_logic_proto_rawDesc), len(file_logic_proto_rawDesc)))
	})
	return file_logic_proto_rawDescData
}

var file_logic_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_logic_proto_goTypes = []any{
	(*LoginRequest)(nil),        // 0: logic_pb.LoginRequest
	(*LoginResponse)(nil),       // 1: logic_pb.LoginResponse
	(*RegisterRequest)(nil),     // 2: logic_pb.RegisterRequest
	(*RegisterReply)(nil),       // 3: logic_pb.RegisterReply
	(*LogoutRequest)(nil),       // 4: logic_pb.LogoutRequest
	(*LogoutResponse)(nil),      // 5: logic_pb.LogoutResponse
	(*CheckAuthRequest)(nil),    // 6: logic_pb.CheckAuthRequest
	(*CheckAuthResponse)(nil),   // 7: logic_pb.CheckAuthResponse
	(*GetUserInfoRequest)(nil),  // 8: logic_pb.GetUserInfoRequest
	(*GetUserInfoResponse)(nil), // 9: logic_pb.GetUserInfoResponse
	(*ConnectRequest)(nil),      // 10: logic_pb.ConnectRequest
	(*ConnectReply)(nil),        // 11: logic_pb.ConnectReply
	(*DisConnectRequest)(nil),   // 12: logic_pb.DisConnectRequest
	(*DisConnectReply)(nil),     // 13: logic_pb.DisConnectReply
	(*SendMsg)(nil),             // 14: logic_pb.SendMsg
	(*SendTcpMsg)(nil),          // 15: logic_pb.SendTcpMsg
}
var file_logic_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_logic_proto_init() }
func file_logic_proto_init() {
	if File_logic_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_logic_proto_rawDesc), len(file_logic_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_logic_proto_goTypes,
		DependencyIndexes: file_logic_proto_depIdxs,
		MessageInfos:      file_logic_proto_msgTypes,
	}.Build()
	File_logic_proto = out.File
	file_logic_proto_goTypes = nil
	file_logic_proto_depIdxs = nil
}
